import{_ as i,W as t,X as l,Z as a,$ as e,a0 as d,a2 as n,C as r}from"./framework-3a0c4e99.js";const o={},c=n('<h1 id="archlinux-安装nvm-nodejs并配置安装pm2-pm2-logrotate" tabindex="-1"><a class="header-anchor" href="#archlinux-安装nvm-nodejs并配置安装pm2-pm2-logrotate" aria-hidden="true">#</a> ArchLinux 安装nvm nodejs并配置安装pm2 pm2-logrotate</h1><h3 id="安装nvm" tabindex="-1"><a class="header-anchor" href="#安装nvm" aria-hidden="true">#</a> 安装nvm</h3><h4 id="下载安装脚本" tabindex="-1"><a class="header-anchor" href="#下载安装脚本" aria-hidden="true">#</a> 下载安装脚本</h4>',3),p={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},m=a("code",null,"git",-1),u=a("code",null,"curl",-1),v=a("code",null,"wget",-1),h=n(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>网络不好的同学可以使用我配置好的脚本</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -o- https://local.wuanwanghao.top:9000/test/nvm_install.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -qO- https://local.wuanwanghao.top:9000/test/nvm_install.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h4><p>一般centos 和 ubuntu 环境安装的同学就已经可以使用 nvm 了 但是Arch linux 同学还不能使用，我们要配置下环境变量</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim ~/.profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="写入配置" tabindex="-1"><a class="header-anchor" href="#写入配置" aria-hidden="true">#</a> 写入配置</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/
export NVM_IOJS_ORG_MIRROR=http://npm.taobao.org/mirrors/iojs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="应用配置" tabindex="-1"><a class="header-anchor" href="#应用配置" aria-hidden="true">#</a> 应用配置</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>source ~/.profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="nvm-常用命令" tabindex="-1"><a class="header-anchor" href="#nvm-常用命令" aria-hidden="true">#</a> nvm 常用命令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> stable <span class="token comment">## 安装最新稳定版 node</span>
nvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 安装指定版本</span>
nvm uninstall <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 删除已安装的指定版本</span>
nvm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 切换使用指定的版本node</span>
nvm <span class="token function">ls</span> <span class="token comment">## 列出所有安装的版本</span>
nvm ls-remote <span class="token comment">## 列出所有远程服务器的版本</span>
nvm current <span class="token comment">## 显示当前的版本</span>
nvm <span class="token builtin class-name">alias</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 给不同的版本号添加别名</span>
nvm <span class="token builtin class-name">unalias</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment">## 删除已定义的别名</span>
nvm reinstall-packages <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 在当前版本 node 环境下，重新全局安装指定版本号的 npm 包</span>
nvm <span class="token builtin class-name">alias</span> default <span class="token punctuation">[</span>node版本号<span class="token punctuation">]</span> <span class="token comment">##设置默认版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装nodejs" tabindex="-1"><a class="header-anchor" href="#安装nodejs" aria-hidden="true">#</a> 安装nodejs</h3><p>nvm 安装 最新发行版</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置npm-源" tabindex="-1"><a class="header-anchor" href="#配置npm-源" aria-hidden="true">#</a> 配置npm 源</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmjs.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="安装yarn" tabindex="-1"><a class="header-anchor" href="#安装yarn" aria-hidden="true">#</a> 安装yarn</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">yarn</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置yarn源" tabindex="-1"><a class="header-anchor" href="#配置yarn源" aria-hidden="true">#</a> 配置yarn源</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装pm2-进程管理工具" tabindex="-1"><a class="header-anchor" href="#安装pm2-进程管理工具" aria-hidden="true">#</a> 安装pm2 进程管理工具</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install -g pm2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="pm2-常用命令" tabindex="-1"><a class="header-anchor" href="#pm2-常用命令" aria-hidden="true">#</a> pm2 常用命令</h4><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>pm2 start app.js --name=&quot;fx67ll&quot; 启动并命名为fx67ll，没有命名的话后续可以用id替代name
pm2 start app.js --watch 当文件变化时自动重启应用
pm2 start script.sh 启动bash脚本
pm2 list 查看所有启动的应用列表
pm2 monit 显示每个应用程序的CPU和内存占用情况
pm2 show [app-id/app-name] 显示指定应用程序的所有信息
pm2 log 显示应用程序的日志信息
pm2 log [app-id/app-name] 显示指定应用程序的日志信息
pm2 flush 清空所有日志文件
pm2 stop all 停止所有应用程序
pm2 stop [app-id/app-name] 停止指定应用程序
pm2 restart all 重启所有应用程序
pm2 restart [app-id/app-name] 重启指定应用程序
pm2 delete all 关闭并删除所有应用程序
pm2 delete [app-id/app-name] 删除指定的应用程序
pm2 reset [app-id/app-name] 重置重启数量
pm2 startup 创建开机自启动命令
pm2 save 保存当前应用列表
pm2 resurrect 重新加载保存的应用列表
pm2 update 保存进程，杀死并重启进程，一般用于更新pm2版本
pm2 ecosystem 生成一个示例json配置文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="启动应用" tabindex="-1"><a class="header-anchor" href="#启动应用" aria-hidden="true">#</a> 启动应用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 start mayfly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看应用" tabindex="-1"><a class="header-anchor" href="#查看应用" aria-hidden="true">#</a> 查看应用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://local.wuanwanghao.top:9000/test/test/image-1668258326917.png" alt="image-1668258326917" tabindex="0" loading="lazy"><figcaption>image-1668258326917</figcaption></figure><h4 id="设置开机启动" tabindex="-1"><a class="header-anchor" href="#设置开机启动" aria-hidden="true">#</a> 设置开机启动</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 startup
pm2 save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>运行pm2 startup 在/etc/init.d/目录下生成pm2-root的启动脚本，且自动将pm2-root设为服务。</code></p><h4 id="pm2-查看日志" tabindex="-1"><a class="header-anchor" href="#pm2-查看日志" aria-hidden="true">#</a> pm2 查看日志</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 logs mayfly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://local.wuanwanghao.top:9000/test/test/image-1668258487288.png" alt="image-1668258487288" loading="lazy"><strong>同时我们也可以使用 tail -f 查看指定的文件的日志</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tail -200f /root/.pm2/logs/main.out.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>但是pm2自带的日志功能是不支持自动分割的，这就会导致随之时间的推移，我们的日志文件会越来越大，不但会影响性能，在后期排查问题的时候也会很麻烦，这时我们就可以使用pm2-logrotate插件来解决上面的问题。安装也是非常简单</code></p><h4 id="安装pm2-logrotate" tabindex="-1"><a class="header-anchor" href="#安装pm2-logrotate" aria-hidden="true">#</a> 安装pm2-logrotate</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 install pm2-logrotate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 pm2 conf pm2-logratate 可以查看详细的配置 <img src="https://local.wuanwanghao.top:9000/test/test/image-1668258663216.png" alt="image-1668258663216" loading="lazy"><img src="https://local.wuanwanghao.top:9000/test/test/image-1668258687030.png" alt="image-1668258687030" loading="lazy"> 比如我们可以设置日志文件大小为1KB</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2  set pm2-logrotate:max_size 1k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改完不要忘记重启服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pm2 restart all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当大小达到1KB就会自动分割，格式如：main-out__2022-07-29_11-00-32.log 的文件。</p><p>pm2日志文件储存在 /root/.pm2/logs 文件夹下。 <img src="https://local.wuanwanghao.top:9000/test/test/image-1668258827133.png" alt="image-1668258827133" loading="lazy"></p>`,50);function g(b,x){const s=r("ExternalLinkIcon");return t(),l("div",null,[c,a("p",null,[e("nvm 官网地址 "),a("a",p,[e("https://github.com/nvm-sh/nvm"),d(s)]),e(" 安装前提服务器配置好"),m,e(),u,e(" 或者 "),v,e(" 网络好的同学可以使用官网的例子")]),h])}const f=i(o,[["render",g],["__file","ArchLinux 安装nvm nodejs并配置安装pm2 pm2-logrotate.html.vue"]]);export{f as default};
