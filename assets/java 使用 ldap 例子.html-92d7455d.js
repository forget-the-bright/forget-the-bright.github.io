const n=JSON.parse('{"key":"v-3d2cc9e4","path":"/halo/java%20%E4%BD%BF%E7%94%A8%20ldap%20%E4%BE%8B%E5%AD%90.html","title":"java 使用 ldap 例子","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-04-17T00:00:00.000Z","category":["Java"],"headerDepth":5,"description":"java 使用 ldap 例子 import java.util.Hashtable; import javax.naming.AuthenticationException; import javax.naming.CommunicationException; import javax.naming.directory.DirContext; import javax.naming.directory.InitialDirContext; public class AdTest { public AdTest() { } public static int connect(String host, String post, String username, String password) { DirContext ctx = null; int rs = 0; String domain = \\"@example.com\\"; //ldap 服务器域控 String name = username.indexOf(domain) &gt; 0 ? username : username + domain; Hashtable&lt;String, String&gt; HashEnv = new Hashtable(); HashEnv.put(\\"java.naming.security.authentication\\", \\"simple\\"); HashEnv.put(\\"java.naming.security.principal\\", name); HashEnv.put(\\"java.naming.security.credentials\\", password); HashEnv.put(\\"java.naming.factory.initial\\", \\"com.sun.jndi.ldap.LdapCtxFactory\\"); HashEnv.put(\\"com.sun.jndi.ldap.connect.timeout\\", \\"3000\\"); HashEnv.put(\\"java.naming.provider.url\\", \\"ldap://\\" + host + \\":\\" + post); try { ctx = new InitialDirContext(HashEnv); System.out.println(\\"身份验证成功!\\"); } catch (AuthenticationException var22) { System.out.println(\\"身份验证失败!\\"); rs = 1; var22.printStackTrace(); } catch (CommunicationException var23) { System.out.println(\\"AD域连接失败!\\"); rs = 2; var23.printStackTrace(); } catch (Exception var24) { System.out.println(\\"身份验证未知异常!\\"); rs = 3; var24.printStackTrace(); } finally { if (null != ctx) { try { ctx.close(); ctx = null; } catch (Exception var21) { var21.printStackTrace(); } } } return rs; } }","head":[["meta",{"property":"og:url","content":"https://github.wuanwanghao.top/halo/java%20%E4%BD%BF%E7%94%A8%20ldap%20%E4%BE%8B%E5%AD%90.html"}],["meta",{"property":"og:site_name","content":"忘皓 博客"}],["meta",{"property":"og:title","content":"java 使用 ldap 例子"}],["meta",{"property":"og:description","content":"java 使用 ldap 例子 import java.util.Hashtable; import javax.naming.AuthenticationException; import javax.naming.CommunicationException; import javax.naming.directory.DirContext; import javax.naming.directory.InitialDirContext; public class AdTest { public AdTest() { } public static int connect(String host, String post, String username, String password) { DirContext ctx = null; int rs = 0; String domain = \\"@example.com\\"; //ldap 服务器域控 String name = username.indexOf(domain) &gt; 0 ? username : username + domain; Hashtable&lt;String, String&gt; HashEnv = new Hashtable(); HashEnv.put(\\"java.naming.security.authentication\\", \\"simple\\"); HashEnv.put(\\"java.naming.security.principal\\", name); HashEnv.put(\\"java.naming.security.credentials\\", password); HashEnv.put(\\"java.naming.factory.initial\\", \\"com.sun.jndi.ldap.LdapCtxFactory\\"); HashEnv.put(\\"com.sun.jndi.ldap.connect.timeout\\", \\"3000\\"); HashEnv.put(\\"java.naming.provider.url\\", \\"ldap://\\" + host + \\":\\" + post); try { ctx = new InitialDirContext(HashEnv); System.out.println(\\"身份验证成功!\\"); } catch (AuthenticationException var22) { System.out.println(\\"身份验证失败!\\"); rs = 1; var22.printStackTrace(); } catch (CommunicationException var23) { System.out.println(\\"AD域连接失败!\\"); rs = 2; var23.printStackTrace(); } catch (Exception var24) { System.out.println(\\"身份验证未知异常!\\"); rs = 3; var24.printStackTrace(); } finally { if (null != ctx) { try { ctx.close(); ctx = null; } catch (Exception var21) { var21.printStackTrace(); } } } return rs; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-17T07:23:00.000Z"}],["meta",{"property":"article:published_time","content":"2023-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-17T07:23:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"java 使用 ldap 例子\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-17T07:23:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":1,"title":"java 使用 ldap 例子","slug":"java-使用-ldap-例子","link":"#java-使用-ldap-例子","children":[]}],"git":{"createdTime":1681716180000,"updatedTime":1681716180000,"contributors":[{"name":"forget-the-bright","email":"kshelloworldwh@gmail.com","commits":1}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"halo/java 使用 ldap 例子.md","localizedDate":"2023年4月17日","excerpt":"<h1> java 使用 ldap 例子</h1>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Hashtable</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>naming<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">AuthenticationException</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>naming<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">CommunicationException</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>naming<span class=\\"token punctuation\\">.</span>directory<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">DirContext</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>naming<span class=\\"token punctuation\\">.</span>directory<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">InitialDirContext</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AdTest</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">AdTest</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">connect</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> host<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> post<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> username<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> password<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">DirContext</span> ctx <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> rs <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">String</span> domain <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"@example.com\\"</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//ldap 服务器域控</span>\\n        <span class=\\"token class-name\\">String</span> name <span class=\\"token operator\\">=</span> username<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>domain<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> username <span class=\\"token operator\\">:</span> username <span class=\\"token operator\\">+</span> domain<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Hashtable</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token class-name\\">HashEnv</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Hashtable</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"java.naming.security.authentication\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"simple\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"java.naming.security.principal\\"</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"java.naming.security.credentials\\"</span><span class=\\"token punctuation\\">,</span> password<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"java.naming.factory.initial\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"com.sun.jndi.ldap.LdapCtxFactory\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"com.sun.jndi.ldap.connect.timeout\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"3000\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"java.naming.provider.url\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"ldap://\\"</span> <span class=\\"token operator\\">+</span> host <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":\\"</span> <span class=\\"token operator\\">+</span> post<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            ctx <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">InitialDirContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HashEnv</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"身份验证成功!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">AuthenticationException</span> var22<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"身份验证失败!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            rs <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n            var22<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">CommunicationException</span> var23<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"AD域连接失败!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            rs <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n            var23<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> var24<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"身份验证未知异常!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            rs <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n            var24<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">!=</span> ctx<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n                    ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    ctx <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> var21<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    var21<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">return</span> rs<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"forget-the-bright"},"autoDesc":true}');export{n as data};
