import{_ as n,W as a,X as s,a2 as e}from"./framework-3a0c4e99.js";const p={},t=e(`<h1 id="mysql每天定时备份" tabindex="-1"><a class="header-anchor" href="#mysql每天定时备份" aria-hidden="true">#</a> MySQL每天定时备份</h1><p>备份是容灾的基础，是指为防止系统出现操作失误或系统故障导致数据丢失，而将全部或部分数据集合从应用主机的硬盘或阵列复制到其它的存储介质的过程。而对于一些网站、系统来说，数据库就是一切，所以做好数据库的备份是至关重要的！</p><p>这里主要以本地磁盘为存储介质讲一下计划任务的添加使用，基本的备份脚本，其它存储介质只是介质的访问方式可能不大一样。</p><h4 id="_1、查看磁盘空间情况" tabindex="-1"><a class="header-anchor" href="#_1、查看磁盘空间情况" aria-hidden="true">#</a> 1、查看磁盘空间情况：</h4><p>既然是定时备份，就要选择一个空间充足的磁盘空间，避免出现因空间不足导致备份失败，数据丢失的恶果！</p><p>存储到当前磁盘这是最简单，却是最不推荐的；服务器有多块硬盘，最好是把备份存放到另一块硬盘上；有条件就选择更好更安全的存储介质；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">df</span> <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、创建备份目录：</p><p>上面我们使用命令看出/home下空间比较充足，所以可以考虑在/home保存备份文件；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home
<span class="token function">mkdir</span> backupcd backup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、创建备份shell脚本" tabindex="-1"><a class="header-anchor" href="#_3、创建备份shell脚本" aria-hidden="true">#</a> 3、创建备份Shell脚本:</h4><p>注意把以下命令中的DatabaseName换为实际的数据库名称； 当然，你也可以使用其实的命名规则！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> bkDatabaseName.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入/粘贴以下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
mysqldump <span class="token parameter variable">-uusername</span> <span class="token parameter variable">-ppassword</span> DatabaseName <span class="token operator">&gt;</span> /home/backup/DatabaseName_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d_%H%M%S<span class="token variable">)</span></span>.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>对备份进行压缩：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
mysqldump <span class="token parameter variable">-uusername</span> <span class="token parameter variable">-ppassword</span> DatabaseName <span class="token operator">|</span> <span class="token function">gzip</span> <span class="token operator">&gt;</span> /home/backup/DatabaseName_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d_%H%M%S<span class="token variable">)</span></span>.sql.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意： 把 username 替换为实际的用户名； 把 password 替换为实际的密码； 把 DatabaseName 替换为实际的数据库名；</p><h4 id="_4、添加可执行权限" tabindex="-1"><a class="header-anchor" href="#_4、添加可执行权限" aria-hidden="true">#</a> 4、添加可执行权限：</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> u+x bkDatabaseName.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加可执行权限之后先执行一下，看看脚本有没有错误，能不能正常使用；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./bkDatabaseName.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5、添加计划任务" tabindex="-1"><a class="header-anchor" href="#_5、添加计划任务" aria-hidden="true">#</a> 5、添加计划任务</h4><p>检测或安装 crontab 确认crontab是否安装： 执行 crontab 命令如果报 command not found，就表明没有安装</p><p>如时没有安装 crontab，需要先安装它，具体步骤请参考： CentOS下使用yum命令安装计划任务程序crontab 使用rpm命令从CentOS系统盘安装计划任务程序crontab</p><p>添加计划任务 执行命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这时就像使用vi编辑器一样，可以对计划任务进行编辑。 输入以下内容并保存：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*/1 * * * * /home/backup/bkDatabaseName.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体是什么意思呢？ 意思是每一分钟执行一次shell脚本“/home/backup/bkDatabaseName.sh”。</p><h4 id="_6、测试任务是否执行" tabindex="-1"><a class="header-anchor" href="#_6、测试任务是否执行" aria-hidden="true">#</a> 6、测试任务是否执行</h4><p>很简单，我们就执行几次“ls”命令，看看一分钟过后文件有没有被创建就可以了！</p><p>如果任务执行失败了，可以通过以下命令查看任务日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> /var/log/cron
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出类似如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Dec <span class="token number">15</span> <span class="token number">10</span>:00:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">51208</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>/usr/lib64/sa/sa1 <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:01:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">51441</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>run-parts /etc/cron.hourly<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:01:01 loaclhost run-parts<span class="token punctuation">(</span>/etc/cron.hourly<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">51441</span><span class="token punctuation">]</span>: starting 0anacron
Dec <span class="token number">15</span> <span class="token number">10</span>:01:01 loaclhost run-parts<span class="token punctuation">(</span>/etc/cron.hourly<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">51453</span><span class="token punctuation">]</span>: finished 0anacron
Dec <span class="token number">15</span> <span class="token number">10</span>:01:01 loaclhost run-parts<span class="token punctuation">(</span>/etc/cron.hourly<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">51441</span><span class="token punctuation">]</span>: starting mcelog.cron
Dec <span class="token number">15</span> <span class="token number">10</span>:01:01 loaclhost run-parts<span class="token punctuation">(</span>/etc/cron.hourly<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">51460</span><span class="token punctuation">]</span>: finished mcelog.cron
Dec <span class="token number">15</span> <span class="token number">10</span>:10:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">53628</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>/usr/lib64/sa/sa1 <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:16:58 loaclhost crontab<span class="token punctuation">[</span><span class="token number">55380</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> BEGIN EDIT <span class="token punctuation">(</span>root<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:18:30 loaclhost crontab<span class="token punctuation">[</span><span class="token number">55380</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> REPLACE <span class="token punctuation">(</span>root<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:18:30 loaclhost crontab<span class="token punctuation">[</span><span class="token number">55380</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> END EDIT <span class="token punctuation">(</span>root<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:19:01 loaclhost crond<span class="token punctuation">[</span><span class="token number">5673</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> RELOAD <span class="token punctuation">(</span>/var/spool/cron/root<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:19:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">55906</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>/bak/bak_sql.sh<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:19:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">55905</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> MAIL <span class="token punctuation">(</span>mailed <span class="token number">54</span> bytes of output but got status 0x007f<span class="token comment">#012)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:20:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">56148</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>/bak/bak_sql.sh<span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:20:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">56149</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> CMD <span class="token punctuation">(</span>/usr/lib64/sa/sa1 <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">)</span>
Dec <span class="token number">15</span> <span class="token number">10</span>:20:01 loaclhost CROND<span class="token punctuation">[</span><span class="token number">56146</span><span class="token punctuation">]</span>: <span class="token punctuation">(</span>root<span class="token punctuation">)</span> MAIL <span class="token punctuation">(</span>mailed <span class="token number">54</span> bytes of output but got status 0x007f<span class="token comment">#012)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),c=[t];function o(l,u){return a(),s("div",null,c)}const r=n(p,[["render",o],["__file","MySQL每天定时备份.html.vue"]]);export{r as default};
