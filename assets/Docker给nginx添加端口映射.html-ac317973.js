const e=JSON.parse('{"key":"v-112afe32","path":"/halo/Docker%E7%BB%99nginx%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84.html","title":"Docker给nginx添加端口映射","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2021-09-16T00:00:00.000Z","category":["Docker"],"tag":["Docker","nginx"],"headerDepth":5,"description":"Docker给nginx添加端口映射 场景： 运行了nginx，一开始只映射了80端口，后面载部署项目的时候，需要用到其他端口，不想重新部署容器，所以通过修改配置文件的方式给容器添加其他端口 当然。添加端口的方法是通用的，除此以外的方法比如将容器打包成镜像，再运行一个容器，或者干脆放弃当前容器，重新运行一个容器是完全不在我考虑范围内的 1、查看容器ID 执行命令 docker inspect nginx # 容器名","head":[["meta",{"property":"og:url","content":"https://github.wuanwanghao.top/halo/Docker%E7%BB%99nginx%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84.html"}],["meta",{"property":"og:site_name","content":"忘皓 博客"}],["meta",{"property":"og:title","content":"Docker给nginx添加端口映射"}],["meta",{"property":"og:description","content":"Docker给nginx添加端口映射 场景： 运行了nginx，一开始只映射了80端口，后面载部署项目的时候，需要用到其他端口，不想重新部署容器，所以通过修改配置文件的方式给容器添加其他端口 当然。添加端口的方法是通用的，除此以外的方法比如将容器打包成镜像，再运行一个容器，或者干脆放弃当前容器，重新运行一个容器是完全不在我考虑范围内的 1、查看容器ID 执行命令 docker inspect nginx # 容器名"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-17T08:34:33.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2021-09-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-17T08:34:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker给nginx添加端口映射\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-17T08:34:33.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":1,"title":"Docker给nginx添加端口映射","slug":"docker给nginx添加端口映射","link":"#docker给nginx添加端口映射","children":[{"level":2,"title":"场景：","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"1、查看容器ID","slug":"_1、查看容器id","link":"#_1、查看容器id","children":[]},{"level":2,"title":"2、修改之前一定要先停掉容器，否则自动还原","slug":"_2、修改之前一定要先停掉容器-否则自动还原","link":"#_2、修改之前一定要先停掉容器-否则自动还原","children":[]},{"level":2,"title":"3、修改配置文件","slug":"_3、修改配置文件","link":"#_3、修改配置文件","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"4、保存、退出、重启容器","slug":"_4、保存、退出、重启容器","link":"#_4、保存、退出、重启容器","children":[]}]}],"git":{"createdTime":1681716180000,"updatedTime":1681720473000,"contributors":[{"name":"forget-the-bright","email":"kshelloworldwh@gmail.com","commits":2}]},"readingTime":{"minutes":1.3,"words":389},"filePathRelative":"halo/Docker给nginx添加端口映射.md","localizedDate":"2021年9月16日","excerpt":"<h1> Docker给nginx添加端口映射</h1>\\n<h2> 场景：</h2>\\n<blockquote>\\n<p>运行了nginx，一开始只映射了80端口，后面载部署项目的时候，需要用到其他端口，不想重新部署容器，所以通过修改配置文件的方式给容器添加其他端口\\n当然。添加端口的方法是通用的，除此以外的方法比如将容器打包成镜像，再运行一个容器，或者干脆放弃当前容器，重新运行一个容器是完全不在我考虑范围内的</p>\\n</blockquote>\\n<h2> 1、查看容器ID</h2>\\n<p>执行命令</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">docker</span> inspect nginx <span class=\\"token comment\\"># 容器名</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"forget-the-bright"},"autoDesc":true}');export{e as data};
