import{_ as n,W as d,X as o,Z as a,$ as t,a0 as i,a2 as e,C as r}from"./framework-3a0c4e99.js";const l={},c=e(`<h1 id="linux-chmod命令" tabindex="-1"><a class="header-anchor" href="#linux-chmod命令" aria-hidden="true">#</a> Linux chmod命令</h1><p>Linux chmod（英文全拼：change mode）命令是控制用户对文件的权限的命令</p><p>Linux/Unix 的文件调用权限分为三级 : 文件所有者（Owner）、用户组（Group）、其它用户（Other Users）。 <img src="https://www.runoob.com/wp-content/uploads/2014/08/file-permissions-rwx.jpg" alt="" loading="lazy"></p><p>只有文件所有者和超级用户可以修改文件或目录的权限。可以使用绝对模式（八进制数字模式），符号模式指定文件的权限。 <img src="https://www.runoob.com/wp-content/uploads/2014/08/rwx-standard-unix-permission-bits.png" alt="" loading="lazy"></p><p><strong>使用权限 : 所有使用者</strong></p><p><strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token punctuation">[</span>-cfvR<span class="token punctuation">]</span> <span class="token punctuation">[</span>--help<span class="token punctuation">]</span> <span class="token punctuation">[</span>--version<span class="token punctuation">]</span> mode file<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数说明</strong> mode : 权限设定字串，格式如下 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>ugoa<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span>+-<span class="token operator">=</span><span class="token punctuation">]</span><span class="token punctuation">[</span>rwxX<span class="token punctuation">]</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中：</p><ul><li><p><code>u</code> 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，</p></li><li><p><code>o</code> 表示其他以外的人，a 表示这三者皆是。</p></li><li><p><code>+</code> 表示增加权限、- 表示取消权限、= 表示唯一设定权限。</p></li><li><p><code>r</code> 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。 其他参数说明：</p></li><li><p><code>-c</code> : 若该文件权限确实已经更改，才显示其更改动作</p></li><li><p><code>-f</code> : 若该文件权限无法被更改也不要显示错误讯息</p></li><li><p><code>-v</code> : 显示权限变更的详细资料</p></li><li><p><code>-R</code> : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)</p></li><li><p><code>--help</code> : 显示辅助说明</p></li><li><p><code>--version</code> : 显示版本 符号模式 使用符号模式可以设置多个项目：who（用户类型），operator（操作符）和 permission（权限），每个项目的设置可以用逗号隔开。 命令 chmod 将修改 who 指定的用户类型对文件的访问权限，用户类型由一个或者多个字母在 who 的位置来说明，如 who 的符号模式表所示:</p></li></ul><table><thead><tr><th>who</th><th>用户类型</th><th>说明</th></tr></thead><tbody><tr><td>u</td><td>user</td><td>文件所有者</td></tr><tr><td>g</td><td>group</td><td>文件所有者所在组</td></tr><tr><td>o</td><td>others</td><td>所有其他用户</td></tr><tr><td>a</td><td>all</td><td>所用用户, 相当于 ugo</td></tr></tbody></table><p>operator 的符号模式表:</p><table><thead><tr><th>Operator</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>为指定的用户类型增加权限</td></tr><tr><td>-</td><td>去除指定用户类型的权限</td></tr><tr><td>=</td><td>设置指定用户权限的设置，即将用户类型的所有权限重新设置</td></tr></tbody></table><p>permission 的符号模式表:</p><p>模式 名字 说明 r 读 设置为可读权限 w 写 设置为可写权限 x 执行权限 设置为可执行权限 X 特殊执行权限 只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行 s setuid/gid 当文件被执行时，根据who参数指定的用户类型设置文件的setuid或者setgid权限 t 粘贴位 设置粘贴位，只有超级用户可以设置该位，只有文件所有者u可以使用该位 八进制语法 chmod命令可以使用八进制数来指定权限。文件或目录的权限位是由9个权限位来控制，每三位为一组，它们分别是文件所有者（User）的读、写、执行，用户组（Group）的读、写、执行以及其它用户（Other）的读、写、执行。历史上，文件权限被放在一个比特掩码中，掩码中指定的比特位设为1，用来说明一个类具有相应的优先级。</p><table><thead><tr><th>#</th><th>权限</th><th>rwx</th><th>二进制</th></tr></thead><tbody><tr><td>7</td><td>读 + 写 + 执行</td><td>rwx</td><td>111</td></tr><tr><td>6</td><td>读 + 写</td><td>rw-</td><td>110</td></tr><tr><td>5</td><td>读 + 执行</td><td>r-x</td><td>101</td></tr><tr><td>4</td><td>只读</td><td>r--</td><td>100</td></tr><tr><td>3</td><td>写 + 执行</td><td>-wx</td><td>011</td></tr><tr><td>2</td><td>只写</td><td>-w-</td><td>010</td></tr><tr><td>1</td><td>只执行</td><td>--x</td><td>001</td></tr><tr><td>0</td><td>无</td><td>---</td><td>000</td></tr><tr><td>例如， 765 将这样解释：</td><td></td><td></td><td></td></tr></tbody></table><p>所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7。 用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6。 其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5。 实例 将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ugo+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ug+w,o-w file1.txt file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),p={href:"http://ex1.py",target:"_blank",rel:"noopener noreferrer"},u=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> u+x ex1.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将目前目录下的所有文件与子目录皆设为任何人可读取 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+r *
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此外chmod也可以用数字来表示权限如 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>语法为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> abc <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。</p><p><strong>r=4，w=2，x=1</strong> 若要 rwx 属性则 4+2+1=7； 若要 rw- 属性则 4+2=6； 若要 r-x 属性则 4+1=5。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token assign-left variable">a</span><span class="token operator">=</span>rwx <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>和</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果相同</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token assign-left variable">ug</span><span class="token operator">=</span>rwx,o<span class="token operator">=</span>x <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>和</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">771</span> <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果相同</p><p>若用 <code>chmod 4755 filename</code> 可使此程序具有 root 的权限。</p><p><strong>更多说明</strong></p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>chmod a+r file</td><td>给file的所有用户增加读权限</td></tr><tr><td>chmod a-x file</td><td>删除file的所有用户的执行权限</td></tr><tr><td>chmod a+rw file</td><td>给file的所有用户增加读写权限</td></tr><tr><td>chmod +rwx file</td><td>给file的所有用户增加读写执行权限</td></tr><tr><td>chmod u=rw,go= file</td><td>对file的所有者设置读写权限，清空该用户组和其他用户对file的所有权限（空格代表无权限）</td></tr><tr><td>chmod -R u+r,go-r docs</td><td>对目录docs和其子目录层次结构中的所有文件给用户增加读权限，而对用户组和其他用户删除读权限</td></tr><tr><td>chmod 664 file</td><td>对file的所有者和用户组设置读写权限, 为其其他用户设置读权限</td></tr><tr><td>chmod 0755 file</td><td>相当于u=rwx (4+2+1),go=rx (4+1 &amp; 4+1)。0 没有特殊模式。</td></tr><tr><td>chmod 4755 file</td><td>4设置了设置用户ID位，剩下的相当于 u=rwx (4+2+1),go=rx (4+1 &amp; 4+1)。</td></tr><tr><td>find path/ -type d -exec chmod a-x {} ;</td><td>删除可执行权限对path/以及其所有的目录（不包括文件）的所有用户，使用&#39;-type f&#39;匹配文件</td></tr><tr><td>find path/ -type d -exec chmod a+x {} ;</td><td>允许所有用户浏览或通过目录path/</td></tr></tbody></table>`,20);function h(m,b){const s=r("ExternalLinkIcon");return d(),o("div",null,[c,a("p",null,[t("为 "),a("a",p,[t("ex1.py"),i(s)]),t(" 文件拥有者增加可执行权限:")]),u])}const g=n(l,[["render",h],["__file","Linux chmod命令.html.vue"]]);export{g as default};
