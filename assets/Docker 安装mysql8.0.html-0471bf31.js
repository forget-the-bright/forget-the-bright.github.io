import{_ as p,W as t,X as l,Z as a,$ as s,a0 as o,a2 as n,C as i}from"./framework-3a0c4e99.js";const r={},c=n(`<h1 id="docker-安装mysql8-0" tabindex="-1"><a class="header-anchor" href="#docker-安装mysql8-0" aria-hidden="true">#</a> Docker 安装mysql8.0</h1><h3 id="一、写在前面" tabindex="-1"><a class="header-anchor" href="#一、写在前面" aria-hidden="true">#</a> 一、写在前面</h3><p>今天自己原本的mysql服务配置出了问题，刚好自己接触了容器技术，就想着自己使用docker重新部署一个mysql服务。</p><h3 id="二、下载步骤" tabindex="-1"><a class="header-anchor" href="#二、下载步骤" aria-hidden="true">#</a> 二、下载步骤</h3><p>首先要获取mysql镜像（可以通过官网下载或者从公司的仓库获取），下面演示从官网下载步骤</p><h4 id="_2-1-docker-search-mysql-可以看到搜索的结果-这个结果是按照一定的星级评价规则排序的。" tabindex="-1"><a class="header-anchor" href="#_2-1-docker-search-mysql-可以看到搜索的结果-这个结果是按照一定的星级评价规则排序的。" aria-hidden="true">#</a> 2.1 docker search mysql，可以看到搜索的结果，这个结果是按照一定的星级评价规则排序的。</h4><figure><img src="https://local.wuanwanghao.top:30549/upload/2021/09/image-6acf16e6457a48e49d80b7b1e6561073.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="_2-2-docker-pull-mysql-拉取一个合适版本的mysql到本地服务器" tabindex="-1"><a class="header-anchor" href="#_2-2-docker-pull-mysql-拉取一个合适版本的mysql到本地服务器" aria-hidden="true">#</a> 2.2 docker pull mysql 拉取一个合适版本的mysql到本地服务器</h4><h3 id="三、启动镜像" tabindex="-1"><a class="header-anchor" href="#三、启动镜像" aria-hidden="true">#</a> 三、启动镜像</h3><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>-p 3307:3306：将容器的3307端口映射到主机的3306端口；

-v $PWD/mysql:/var/lib/mysql：将主机当前目录下的/mysql挂载到容器的/var/lib/mysql；

-e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码；

–name 给容器命名，test_mysql
-d 表示刚下载的镜像id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令行如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">3307</span>:3306 <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> mysql_3307 <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/conf.d:/etc/mysql/conf.d <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/logs:/logs <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /etc/localtime:/etc/localtime <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/mysql-files:/var/lib/mysql-files <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、局域网无法访问数据库的方法" tabindex="-1"><a class="header-anchor" href="#四、局域网无法访问数据库的方法" aria-hidden="true">#</a> 四、局域网无法访问数据库的方法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">&#39;wanghao&#39;</span><span class="token variable">@&#39;%&#39;</span> identified <span class="token keyword">with</span> mysql_native_password <span class="token keyword">by</span> <span class="token string">&#39;Wh*123456&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">&#39;wanghao&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里platform可以任意命名，表示赋予这个账户的权限，这里是赋予所有的权限</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> host<span class="token operator">=</span><span class="token string">&#39;%&#39;</span> <span class="token keyword">where</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">user</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;%&#39;</span> identified <span class="token keyword">with</span> mysql_native_password <span class="token keyword">by</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>刷新权限：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> flush <span class="token keyword">privileges</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="五、表名大小写问题" tabindex="-1"><a class="header-anchor" href="#五、表名大小写问题" aria-hidden="true">#</a> 五、表名大小写问题</h3><figure><img src="https://local.wuanwanghao.top:30549/upload/2021/10/image-c13812355983466f952a08f36c406b63.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>MySQL 上了 8 后，在 Linux 端，对于 lower_case_table_names 参数，只能在初始化的时候设置了，若初始化的时候没设置，那后面就傻愣愣了</p><p>示例：</p><p>当前本地已有环境设置为 lower_case_table_names = 1 了，将 lower_case_table_names 修改为 0 会发生什么。</p><p>测试版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
+-----------+
<span class="token operator">|</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span>
+-----------+
<span class="token operator">|</span> <span class="token number">8.0</span>.18    <span class="token operator">|</span>
+-----------+
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>lower_case_table_names不是动态参数，将my.cnf 中 lower_case_table_names 改为 0</p><p>重启 mysql</p><p>查看错误日志</p><div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token date number">2020-09-22T</span><span class="token time number">17:16:49.781973+08:00</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token level error important">ERROR</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>MY<span class="token operator">-</span><span class="token number">011087</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Different lower_case_table_names settings for server <span class="token operator">(</span><span class="token string">&#39;0&#39;</span><span class="token operator">)</span> and data dictionary <span class="token operator">(</span><span class="token string">&#39;1&#39;</span><span class="token operator">)</span><span class="token punctuation">.</span>
<span class="token date number">2020-09-22T</span><span class="token time number">17:16:49.782401+08:00</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token level error important">ERROR</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>MY<span class="token operator">-</span><span class="token number">010020</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Data Dictionary initialization failed<span class="token punctuation">.</span>
<span class="token date number">2020-09-22T</span><span class="token time number">17:16:49.782620+08:00</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token level error important">ERROR</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>MY<span class="token operator">-</span><span class="token number">010119</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Aborting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>官方是这么说的</p>`,30),d={href:"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html",target:"_blank",rel:"noopener noreferrer"},u=a("img",{src:"https://pic4.zhimg.com/v2-7f96160724c66388120bafc3ff3f6d1b_r.jpg",alt:"image.png",loading:"lazy"},null,-1),m=n(`<p>所以，除非你是安装在 windows上或者可以确保开发人员实行规范建表等操作，不然就在初始化配置my.cnf时候就将 lower_case_table_names = 1 配置上去吧</p><h4 id="docker-部署要大小写忽略只能-运行容器命令的时候加上了" tabindex="-1"><a class="header-anchor" href="#docker-部署要大小写忽略只能-运行容器命令的时候加上了" aria-hidden="true">#</a> docker 部署要大小写忽略只能 运行容器命令的时候加上了</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">3307</span>:3306 <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> mysql_3307 <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/conf.d:/etc/mysql/conf.d <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/logs:/logs <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /etc/localtime:/etc/localtime <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /wanghao/mysql_3307/mysql-files:/var/lib/mysql-files <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> mysql --lower-case-table-names<span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function k(v,b){const e=i("ExternalLinkIcon");return t(),l("div",null,[c,a("p",null,[s("地址："),a("a",d,[s("https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html"),o(e)]),u]),m])}const g=p(r,[["render",k],["__file","Docker 安装mysql8.0.html.vue"]]);export{g as default};
