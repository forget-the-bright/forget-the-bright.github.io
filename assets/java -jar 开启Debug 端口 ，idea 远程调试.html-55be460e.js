import{_ as a,W as e,X as s,a2 as n}from"./framework-3a0c4e99.js";const t={},r=n(`<h1 id="java-jar-开启debug-端口-idea-远程调试" tabindex="-1"><a class="header-anchor" href="#java-jar-开启debug-端口-idea-远程调试" aria-hidden="true">#</a> java -jar 开启Debug 端口 ，idea 远程调试</h1><p>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xdebug</span> <span class="token parameter variable">-Xrunjdwp:transport</span><span class="token operator">=</span>dt_socket,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>n,address<span class="token operator">=</span><span class="token number">5005</span> <span class="token punctuation">[</span>jar文件名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>idea 远程调试 项目添加配置 <img src="https://local.wuanwanghao.top:9000/test/test/image-1676813267156.png" alt="image-1676813267156" loading="lazy"> 添加 Remote JVM Debug 配置 <img src="https://local.wuanwanghao.top:9000/test/test/image-1676813353259.png" alt="image-1676813353259" loading="lazy"> 指定项目地址 和端口 就可以愉快的远程调试了 <img src="https://local.wuanwanghao.top:9000/test/test/image-1676813399674.png" alt="image-1676813399674" loading="lazy"></p>`,4),o=[r];function p(l,i){return e(),s("div",null,o)}const d=a(t,[["render",p],["__file","java -jar 开启Debug 端口 ，idea 远程调试.html.vue"]]);export{d as default};
