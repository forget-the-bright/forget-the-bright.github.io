import{_ as e,W as a,X as s,a2 as n}from"./framework-3a0c4e99.js";const i={},r=n(`<h1 id="scp-命令详解" tabindex="-1"><a class="header-anchor" href="#scp-命令详解" aria-hidden="true">#</a> SCP 命令详解</h1><h2 id="一、示例" tabindex="-1"><a class="header-anchor" href="#一、示例" aria-hidden="true">#</a> 一、示例</h2><ol><li>从本地复制到远程 在本地服务器上将/root/lk目录下所有的文件传输到服务器43.224.34.73的/home/lk/cpfile目录下，命令为：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> /root/lk root@43.224.34.73:/home/lk/cpfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>从远程复制到本地 在本地服务器上操作，将服务器43.224.34.73上/home/lk/目录下所有的文件全部复制到本地的/root目录下，命令为：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> root@43.224.34.73:/home/lk /root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、命令详解" tabindex="-1"><a class="header-anchor" href="#二、命令详解" aria-hidden="true">#</a> 二、命令详解</h2><blockquote><p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。</p></blockquote><blockquote><p>可能会稍微影响一下速度。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。</p></blockquote><blockquote><p>另外，scp还非常不占资源，不会提高多少系统负荷，在这一点上，rsync就远远不及它了。虽然 rsync比scp会快一点，但当小文件众多的情况下，rsync会导致硬盘I/O非常高，而scp基本不影响系统正常使用。</p></blockquote><h3 id="_1-命令格式" tabindex="-1"><a class="header-anchor" href="#_1-命令格式" aria-hidden="true">#</a> 1．命令格式</h3><p>scp [参数] [原路径] [目标路径]</p><h3 id="_2-命令功能" tabindex="-1"><a class="header-anchor" href="#_2-命令功能" aria-hidden="true">#</a> 2．命令功能</h3><p>scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。linux的scp命令可以在linux服务器之间复制文件和目录。</p><h3 id="_3-命令参数" tabindex="-1"><a class="header-anchor" href="#_3-命令参数" aria-hidden="true">#</a> 3．命令参数</h3><blockquote><p>-1 强制scp命令使用协议ssh1 -2 强制scp命令使用协议ssh2 -4 强制scp命令只使用IPv4寻址 -6 强制scp命令只使用IPv6寻址 -B 使用批处理模式（传输过程中不询问传输口令或短语） -C 允许压缩。（将-C标志传递给ssh，从而打开压缩功能） -p 保留原文件的修改时间，访问时间和访问权限。 -q 不显示传输进度条。 -r 递归复制整个目录。 -v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。 -c cipher 以cipher将数据传输进行加密，这个选项将直接传递给ssh。 -F ssh_config 指定一个替代的ssh配置文件，此参数直接传递给ssh。 -i identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。 -l limit 限定用户所能使用的带宽，以Kbit/s为单位。 -o ssh_option 如果习惯于使用ssh_config(5)中的参数传递方式， -P port 注意是大写的P, port是指定数据传输用到的端口号 -S program 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p></blockquote><h3 id="_4-使用实例" tabindex="-1"><a class="header-anchor" href="#_4-使用实例" aria-hidden="true">#</a> 4．使用实例</h3><p>scp命令的实际应用概述：</p><p>从本地服务器复制到远程服务器：</p><h4 id="_1-复制文件" tabindex="-1"><a class="header-anchor" href="#_1-复制文件" aria-hidden="true">#</a> (1) 复制文件</h4><p>命令格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> local_file remote_username@remote_ip:remote_folder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> local_file remote_username@remote_ip:remote_file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> local_file remote_ip:remote_folder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> local_file remote_ip:remote_file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第1,2个指定了用户名，命令执行后需要输入用户密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名</p></blockquote><blockquote><p>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名</p></blockquote><h4 id="_2-复制目录" tabindex="-1"><a class="header-anchor" href="#_2-复制目录" aria-hidden="true">#</a> (2) 复制目录</h4><p>命令格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> local_folder remote_username@remote_ip:remote_folder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> local_folder remote_ip:remote_folder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第1个指定了用户名，命令执行后需要输入用户密码。</p></blockquote><blockquote><p>第2个没有指定用户名，命令执行后需要输入用户名和密码。</p></blockquote>`,37),l=[r];function c(o,d){return a(),s("div",null,l)}const p=e(i,[["render",c],["__file","SCP 命令详解.html.vue"]]);export{p as default};
